// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package ensicoin_rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Outpoint struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Index                uint64   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Outpoint) Reset()         { *m = Outpoint{} }
func (m *Outpoint) String() string { return proto.CompactTextString(m) }
func (*Outpoint) ProtoMessage()    {}
func (*Outpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_a1cb151ec019f54c, []int{0}
}
func (m *Outpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Outpoint.Unmarshal(m, b)
}
func (m *Outpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Outpoint.Marshal(b, m, deterministic)
}
func (dst *Outpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Outpoint.Merge(dst, src)
}
func (m *Outpoint) XXX_Size() int {
	return xxx_messageInfo_Outpoint.Size(m)
}
func (m *Outpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Outpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Outpoint proto.InternalMessageInfo

func (m *Outpoint) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Outpoint) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type TxInput struct {
	PreviousOutput       *Outpoint `protobuf:"bytes,1,opt,name=previous_output,json=previousOutput,proto3" json:"previous_output,omitempty"`
	Script               []byte    `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TxInput) Reset()         { *m = TxInput{} }
func (m *TxInput) String() string { return proto.CompactTextString(m) }
func (*TxInput) ProtoMessage()    {}
func (*TxInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_a1cb151ec019f54c, []int{1}
}
func (m *TxInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxInput.Unmarshal(m, b)
}
func (m *TxInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxInput.Marshal(b, m, deterministic)
}
func (dst *TxInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxInput.Merge(dst, src)
}
func (m *TxInput) XXX_Size() int {
	return xxx_messageInfo_TxInput.Size(m)
}
func (m *TxInput) XXX_DiscardUnknown() {
	xxx_messageInfo_TxInput.DiscardUnknown(m)
}

var xxx_messageInfo_TxInput proto.InternalMessageInfo

func (m *TxInput) GetPreviousOutput() *Outpoint {
	if m != nil {
		return m.PreviousOutput
	}
	return nil
}

func (m *TxInput) GetScript() []byte {
	if m != nil {
		return m.Script
	}
	return nil
}

type TxOutput struct {
	Value                uint64   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Script               []byte   `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxOutput) Reset()         { *m = TxOutput{} }
func (m *TxOutput) String() string { return proto.CompactTextString(m) }
func (*TxOutput) ProtoMessage()    {}
func (*TxOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_a1cb151ec019f54c, []int{2}
}
func (m *TxOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxOutput.Unmarshal(m, b)
}
func (m *TxOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxOutput.Marshal(b, m, deterministic)
}
func (dst *TxOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxOutput.Merge(dst, src)
}
func (m *TxOutput) XXX_Size() int {
	return xxx_messageInfo_TxOutput.Size(m)
}
func (m *TxOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_TxOutput.DiscardUnknown(m)
}

var xxx_messageInfo_TxOutput proto.InternalMessageInfo

func (m *TxOutput) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TxOutput) GetScript() []byte {
	if m != nil {
		return m.Script
	}
	return nil
}

type Tx struct {
	Version              uint32      `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Flags                []string    `protobuf:"bytes,2,rep,name=flags,proto3" json:"flags,omitempty"`
	Inputs               []*TxInput  `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs              []*TxOutput `protobuf:"bytes,4,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Hash                 string      `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Tx) Reset()         { *m = Tx{} }
func (m *Tx) String() string { return proto.CompactTextString(m) }
func (*Tx) ProtoMessage()    {}
func (*Tx) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_a1cb151ec019f54c, []int{3}
}
func (m *Tx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tx.Unmarshal(m, b)
}
func (m *Tx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tx.Marshal(b, m, deterministic)
}
func (dst *Tx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tx.Merge(dst, src)
}
func (m *Tx) XXX_Size() int {
	return xxx_messageInfo_Tx.Size(m)
}
func (m *Tx) XXX_DiscardUnknown() {
	xxx_messageInfo_Tx.DiscardUnknown(m)
}

var xxx_messageInfo_Tx proto.InternalMessageInfo

func (m *Tx) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Tx) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *Tx) GetInputs() []*TxInput {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Tx) GetOutputs() []*TxOutput {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *Tx) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type Block struct {
	Version              uint32   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Flags                []string `protobuf:"bytes,2,rep,name=flags,proto3" json:"flags,omitempty"`
	PrevBlock            []byte   `protobuf:"bytes,3,opt,name=prev_block,json=prevBlock,proto3" json:"prev_block,omitempty"`
	MerkleRoot           []byte   `protobuf:"bytes,4,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	Timestamp            uint64   `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Height               uint32   `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	Target               []byte   `protobuf:"bytes,7,opt,name=target,proto3" json:"target,omitempty"`
	Txs                  []*Tx    `protobuf:"bytes,8,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_a1cb151ec019f54c, []int{4}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Block) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *Block) GetPrevBlock() []byte {
	if m != nil {
		return m.PrevBlock
	}
	return nil
}

func (m *Block) GetMerkleRoot() []byte {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *Block) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Block) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Block) GetTarget() []byte {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Block) GetTxs() []*Tx {
	if m != nil {
		return m.Txs
	}
	return nil
}

type BlockTemplate struct {
	Version              uint32   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Flags                []string `protobuf:"bytes,2,rep,name=flags,proto3" json:"flags,omitempty"`
	PrevBlock            []byte   `protobuf:"bytes,3,opt,name=prev_block,json=prevBlock,proto3" json:"prev_block,omitempty"`
	Timestamp            uint64   `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Height               uint32   `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Target               []byte   `protobuf:"bytes,6,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockTemplate) Reset()         { *m = BlockTemplate{} }
func (m *BlockTemplate) String() string { return proto.CompactTextString(m) }
func (*BlockTemplate) ProtoMessage()    {}
func (*BlockTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_a1cb151ec019f54c, []int{5}
}
func (m *BlockTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockTemplate.Unmarshal(m, b)
}
func (m *BlockTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockTemplate.Marshal(b, m, deterministic)
}
func (dst *BlockTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockTemplate.Merge(dst, src)
}
func (m *BlockTemplate) XXX_Size() int {
	return xxx_messageInfo_BlockTemplate.Size(m)
}
func (m *BlockTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_BlockTemplate proto.InternalMessageInfo

func (m *BlockTemplate) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BlockTemplate) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *BlockTemplate) GetPrevBlock() []byte {
	if m != nil {
		return m.PrevBlock
	}
	return nil
}

func (m *BlockTemplate) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockTemplate) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockTemplate) GetTarget() []byte {
	if m != nil {
		return m.Target
	}
	return nil
}

func init() {
	proto.RegisterType((*Outpoint)(nil), "ensicoin_rpc.Outpoint")
	proto.RegisterType((*TxInput)(nil), "ensicoin_rpc.TxInput")
	proto.RegisterType((*TxOutput)(nil), "ensicoin_rpc.TxOutput")
	proto.RegisterType((*Tx)(nil), "ensicoin_rpc.Tx")
	proto.RegisterType((*Block)(nil), "ensicoin_rpc.Block")
	proto.RegisterType((*BlockTemplate)(nil), "ensicoin_rpc.BlockTemplate")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_types_a1cb151ec019f54c) }

var fileDescriptor_types_a1cb151ec019f54c = []byte{
	// 400 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x4f, 0x8b, 0xd4, 0x30,
	0x18, 0xc6, 0xe9, 0xf4, 0xcf, 0xcc, 0xbc, 0x9d, 0x55, 0x09, 0xeb, 0x90, 0x83, 0x62, 0xe9, 0xa9,
	0x17, 0x07, 0x59, 0x3d, 0x78, 0x13, 0xbc, 0x79, 0x5a, 0x08, 0xbd, 0x97, 0x4e, 0x8d, 0xd3, 0xb0,
	0x6d, 0x13, 0x92, 0xb7, 0x43, 0xfd, 0x48, 0x82, 0x5f, 0xcc, 0x6f, 0x21, 0x49, 0x5a, 0xdd, 0x1d,
	0x98, 0x83, 0xe0, 0xad, 0xcf, 0x9b, 0xe7, 0xfd, 0xf3, 0x7b, 0xa0, 0x90, 0xe2, 0x77, 0xc5, 0xcd,
	0x41, 0x69, 0x89, 0x92, 0xec, 0xf8, 0x60, 0x44, 0x23, 0xc5, 0x50, 0x69, 0xd5, 0xe4, 0x1f, 0x60,
	0x73, 0x3f, 0xa2, 0x92, 0x62, 0x40, 0x42, 0x20, 0x6a, 0x6b, 0xd3, 0xd2, 0x20, 0x0b, 0x8a, 0x1d,
	0x73, 0xdf, 0xe4, 0x16, 0x62, 0x31, 0x7c, 0xe5, 0x13, 0x5d, 0x65, 0x41, 0x11, 0x31, 0x2f, 0xf2,
	0x23, 0xac, 0xcb, 0xe9, 0xcb, 0xa0, 0x46, 0x24, 0x9f, 0xe0, 0xb9, 0xd2, 0xfc, 0x2c, 0xe4, 0x68,
	0x2a, 0x39, 0xa2, 0x1a, 0xd1, 0xf5, 0xa7, 0x77, 0xfb, 0xc3, 0xe3, 0x45, 0x87, 0x65, 0x0b, 0x7b,
	0xb6, 0xd8, 0xef, 0x9d, 0x9b, 0xec, 0x21, 0x31, 0x8d, 0x16, 0x0a, 0xdd, 0x8a, 0x1d, 0x9b, 0x55,
	0xfe, 0x11, 0x36, 0xe5, 0x34, 0x7b, 0x6e, 0x21, 0x3e, 0xd7, 0xdd, 0xc8, 0xdd, 0xe8, 0x88, 0x79,
	0x71, 0xb5, 0xf3, 0x47, 0x00, 0xab, 0x72, 0x22, 0x14, 0xd6, 0x67, 0xae, 0x8d, 0x90, 0x83, 0x6b,
	0xbb, 0x61, 0x8b, 0xb4, 0xe3, 0xbe, 0x75, 0xf5, 0xc9, 0xd0, 0x55, 0x16, 0x16, 0x5b, 0xe6, 0x05,
	0x79, 0x0b, 0x89, 0xb0, 0x48, 0x86, 0x86, 0x59, 0x58, 0xa4, 0x77, 0x2f, 0x9f, 0x02, 0xcc, 0xc0,
	0x6c, 0x36, 0x91, 0x77, 0xb0, 0xf6, 0xbc, 0x86, 0x46, 0xce, 0xbf, 0xbf, 0xf4, 0xfb, 0xe3, 0xd9,
	0x62, 0xfb, 0x93, 0x6f, 0x9c, 0x05, 0xc5, 0xd6, 0xe7, 0x9b, 0xff, 0x0a, 0x20, 0xfe, 0xdc, 0xc9,
	0xe6, 0xe1, 0x9f, 0xcf, 0x7d, 0x0d, 0x60, 0x93, 0xac, 0x8e, 0xb6, 0x9b, 0x86, 0x2e, 0x81, 0xad,
	0xad, 0xf8, 0x71, 0x6f, 0x20, 0xed, 0xb9, 0x7e, 0xe8, 0x78, 0xa5, 0xa5, 0x44, 0x1a, 0xb9, 0x77,
	0xf0, 0x25, 0x26, 0x25, 0x92, 0x57, 0xb0, 0x45, 0xd1, 0x73, 0x83, 0x75, 0xaf, 0xdc, 0x49, 0x11,
	0xfb, 0x5b, 0xb0, 0xd9, 0xb6, 0x5c, 0x9c, 0x5a, 0xa4, 0x89, 0x3b, 0x66, 0x56, 0xb6, 0x8e, 0xb5,
	0x3e, 0x71, 0xa4, 0x6b, 0x9f, 0xb9, 0x57, 0x24, 0x87, 0x10, 0x27, 0x43, 0x37, 0x2e, 0x89, 0x17,
	0x97, 0x49, 0x30, 0xfb, 0x98, 0xff, 0x0c, 0xe0, 0xc6, 0x1d, 0x57, 0xf2, 0x5e, 0x75, 0x35, 0xf2,
	0xff, 0xcd, 0xfc, 0x04, 0x29, 0xba, 0x8e, 0x14, 0x5f, 0x41, 0x4a, 0x1e, 0x23, 0x1d, 0x13, 0xf7,
	0xbf, 0xbc, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x69, 0x79, 0x8c, 0x03, 0x3e, 0x03, 0x00, 0x00,
}

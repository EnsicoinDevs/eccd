// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Error struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{0}
}
func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (dst *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(dst, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type Block struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Version              uint32   `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Flags                []string `protobuf:"bytes,3,rep,name=flags,proto3" json:"flags,omitempty"`
	HashPrevBlock        string   `protobuf:"bytes,4,opt,name=hashPrevBlock,proto3" json:"hashPrevBlock,omitempty"`
	HashMerkleRoot       string   `protobuf:"bytes,5,opt,name=hashMerkleRoot,proto3" json:"hashMerkleRoot,omitempty"`
	Timestamp            int64    `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Height               uint32   `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`
	Bits                 uint32   `protobuf:"varint,8,opt,name=bits,proto3" json:"bits,omitempty"`
	Nonce                uint64   `protobuf:"varint,9,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Txs                  []*Tx    `protobuf:"bytes,10,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{1}
}
func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (dst *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(dst, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Block) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Block) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *Block) GetHashPrevBlock() string {
	if m != nil {
		return m.HashPrevBlock
	}
	return ""
}

func (m *Block) GetHashMerkleRoot() string {
	if m != nil {
		return m.HashMerkleRoot
	}
	return ""
}

func (m *Block) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Block) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Block) GetBits() uint32 {
	if m != nil {
		return m.Bits
	}
	return 0
}

func (m *Block) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Block) GetTxs() []*Tx {
	if m != nil {
		return m.Txs
	}
	return nil
}

type BlockTemplate struct {
	Version              uint32   `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Flags                []string `protobuf:"bytes,2,rep,name=flags,proto3" json:"flags,omitempty"`
	PrevBlock            []byte   `protobuf:"bytes,3,opt,name=prev_block,json=prevBlock,proto3" json:"prev_block,omitempty"`
	Timestamp            uint64   `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Height               uint32   `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Target               uint32   `protobuf:"varint,6,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockTemplate) Reset()         { *m = BlockTemplate{} }
func (m *BlockTemplate) String() string { return proto.CompactTextString(m) }
func (*BlockTemplate) ProtoMessage()    {}
func (*BlockTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{2}
}
func (m *BlockTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockTemplate.Unmarshal(m, b)
}
func (m *BlockTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockTemplate.Marshal(b, m, deterministic)
}
func (dst *BlockTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockTemplate.Merge(dst, src)
}
func (m *BlockTemplate) XXX_Size() int {
	return xxx_messageInfo_BlockTemplate.Size(m)
}
func (m *BlockTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_BlockTemplate proto.InternalMessageInfo

func (m *BlockTemplate) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BlockTemplate) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *BlockTemplate) GetPrevBlock() []byte {
	if m != nil {
		return m.PrevBlock
	}
	return nil
}

func (m *BlockTemplate) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlockTemplate) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockTemplate) GetTarget() uint32 {
	if m != nil {
		return m.Target
	}
	return 0
}

type Tx struct {
	Hash                 string    `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Version              uint32    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Flags                []string  `protobuf:"bytes,3,rep,name=flags,proto3" json:"flags,omitempty"`
	Inputs               []*Input  `protobuf:"bytes,4,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs              []*Output `protobuf:"bytes,5,rep,name=outputs,proto3" json:"outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Tx) Reset()         { *m = Tx{} }
func (m *Tx) String() string { return proto.CompactTextString(m) }
func (*Tx) ProtoMessage()    {}
func (*Tx) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{3}
}
func (m *Tx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tx.Unmarshal(m, b)
}
func (m *Tx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tx.Marshal(b, m, deterministic)
}
func (dst *Tx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tx.Merge(dst, src)
}
func (m *Tx) XXX_Size() int {
	return xxx_messageInfo_Tx.Size(m)
}
func (m *Tx) XXX_DiscardUnknown() {
	xxx_messageInfo_Tx.DiscardUnknown(m)
}

var xxx_messageInfo_Tx proto.InternalMessageInfo

func (m *Tx) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Tx) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Tx) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

func (m *Tx) GetInputs() []*Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Tx) GetOutputs() []*Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

type Input struct {
	PreviousOutput       *Outpoint `protobuf:"bytes,1,opt,name=previousOutput,proto3" json:"previousOutput,omitempty"`
	Script               []byte    `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Input) Reset()         { *m = Input{} }
func (m *Input) String() string { return proto.CompactTextString(m) }
func (*Input) ProtoMessage()    {}
func (*Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{4}
}
func (m *Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Input.Unmarshal(m, b)
}
func (m *Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Input.Marshal(b, m, deterministic)
}
func (dst *Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Input.Merge(dst, src)
}
func (m *Input) XXX_Size() int {
	return xxx_messageInfo_Input.Size(m)
}
func (m *Input) XXX_DiscardUnknown() {
	xxx_messageInfo_Input.DiscardUnknown(m)
}

var xxx_messageInfo_Input proto.InternalMessageInfo

func (m *Input) GetPreviousOutput() *Outpoint {
	if m != nil {
		return m.PreviousOutput
	}
	return nil
}

func (m *Input) GetScript() []byte {
	if m != nil {
		return m.Script
	}
	return nil
}

type Outpoint struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Index                uint32   `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Outpoint) Reset()         { *m = Outpoint{} }
func (m *Outpoint) String() string { return proto.CompactTextString(m) }
func (*Outpoint) ProtoMessage()    {}
func (*Outpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{5}
}
func (m *Outpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Outpoint.Unmarshal(m, b)
}
func (m *Outpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Outpoint.Marshal(b, m, deterministic)
}
func (dst *Outpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Outpoint.Merge(dst, src)
}
func (m *Outpoint) XXX_Size() int {
	return xxx_messageInfo_Outpoint.Size(m)
}
func (m *Outpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Outpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Outpoint proto.InternalMessageInfo

func (m *Outpoint) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Outpoint) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type Output struct {
	Value                uint64   `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Script               []byte   `protobuf:"bytes,2,opt,name=script,proto3" json:"script,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Output) Reset()         { *m = Output{} }
func (m *Output) String() string { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()    {}
func (*Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{6}
}
func (m *Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Output.Unmarshal(m, b)
}
func (m *Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Output.Marshal(b, m, deterministic)
}
func (dst *Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Output.Merge(dst, src)
}
func (m *Output) XXX_Size() int {
	return xxx_messageInfo_Output.Size(m)
}
func (m *Output) XXX_DiscardUnknown() {
	xxx_messageInfo_Output.DiscardUnknown(m)
}

var xxx_messageInfo_Output proto.InternalMessageInfo

func (m *Output) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Output) GetScript() []byte {
	if m != nil {
		return m.Script
	}
	return nil
}

type GetBlockRequest struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockRequest) Reset()         { *m = GetBlockRequest{} }
func (m *GetBlockRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockRequest) ProtoMessage()    {}
func (*GetBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{7}
}
func (m *GetBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockRequest.Unmarshal(m, b)
}
func (m *GetBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockRequest.Merge(dst, src)
}
func (m *GetBlockRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockRequest.Size(m)
}
func (m *GetBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockRequest proto.InternalMessageInfo

func (m *GetBlockRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GetBlockReply struct {
	Block                *Block   `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockReply) Reset()         { *m = GetBlockReply{} }
func (m *GetBlockReply) String() string { return proto.CompactTextString(m) }
func (*GetBlockReply) ProtoMessage()    {}
func (*GetBlockReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{8}
}
func (m *GetBlockReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockReply.Unmarshal(m, b)
}
func (m *GetBlockReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockReply.Marshal(b, m, deterministic)
}
func (dst *GetBlockReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockReply.Merge(dst, src)
}
func (m *GetBlockReply) XXX_Size() int {
	return xxx_messageInfo_GetBlockReply.Size(m)
}
func (m *GetBlockReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockReply proto.InternalMessageInfo

func (m *GetBlockReply) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type GetBestBlockHashRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBestBlockHashRequest) Reset()         { *m = GetBestBlockHashRequest{} }
func (m *GetBestBlockHashRequest) String() string { return proto.CompactTextString(m) }
func (*GetBestBlockHashRequest) ProtoMessage()    {}
func (*GetBestBlockHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{9}
}
func (m *GetBestBlockHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBestBlockHashRequest.Unmarshal(m, b)
}
func (m *GetBestBlockHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBestBlockHashRequest.Marshal(b, m, deterministic)
}
func (dst *GetBestBlockHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBestBlockHashRequest.Merge(dst, src)
}
func (m *GetBestBlockHashRequest) XXX_Size() int {
	return xxx_messageInfo_GetBestBlockHashRequest.Size(m)
}
func (m *GetBestBlockHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBestBlockHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBestBlockHashRequest proto.InternalMessageInfo

type GetBestBlockHashReply struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBestBlockHashReply) Reset()         { *m = GetBestBlockHashReply{} }
func (m *GetBestBlockHashReply) String() string { return proto.CompactTextString(m) }
func (*GetBestBlockHashReply) ProtoMessage()    {}
func (*GetBestBlockHashReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{10}
}
func (m *GetBestBlockHashReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBestBlockHashReply.Unmarshal(m, b)
}
func (m *GetBestBlockHashReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBestBlockHashReply.Marshal(b, m, deterministic)
}
func (dst *GetBestBlockHashReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBestBlockHashReply.Merge(dst, src)
}
func (m *GetBestBlockHashReply) XXX_Size() int {
	return xxx_messageInfo_GetBestBlockHashReply.Size(m)
}
func (m *GetBestBlockHashReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBestBlockHashReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetBestBlockHashReply proto.InternalMessageInfo

func (m *GetBestBlockHashReply) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type PublishTxRequest struct {
	Tx                   []byte   `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishTxRequest) Reset()         { *m = PublishTxRequest{} }
func (m *PublishTxRequest) String() string { return proto.CompactTextString(m) }
func (*PublishTxRequest) ProtoMessage()    {}
func (*PublishTxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{11}
}
func (m *PublishTxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishTxRequest.Unmarshal(m, b)
}
func (m *PublishTxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishTxRequest.Marshal(b, m, deterministic)
}
func (dst *PublishTxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishTxRequest.Merge(dst, src)
}
func (m *PublishTxRequest) XXX_Size() int {
	return xxx_messageInfo_PublishTxRequest.Size(m)
}
func (m *PublishTxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishTxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishTxRequest proto.InternalMessageInfo

func (m *PublishTxRequest) GetTx() []byte {
	if m != nil {
		return m.Tx
	}
	return nil
}

type PublishTxReply struct {
	Error                *Error   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishTxReply) Reset()         { *m = PublishTxReply{} }
func (m *PublishTxReply) String() string { return proto.CompactTextString(m) }
func (*PublishTxReply) ProtoMessage()    {}
func (*PublishTxReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{12}
}
func (m *PublishTxReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishTxReply.Unmarshal(m, b)
}
func (m *PublishTxReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishTxReply.Marshal(b, m, deterministic)
}
func (dst *PublishTxReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishTxReply.Merge(dst, src)
}
func (m *PublishTxReply) XXX_Size() int {
	return xxx_messageInfo_PublishTxReply.Size(m)
}
func (m *PublishTxReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishTxReply.DiscardUnknown(m)
}

var xxx_messageInfo_PublishTxReply proto.InternalMessageInfo

func (m *PublishTxReply) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *PublishTxReply) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type PublishBlockRequest struct {
	Block                []byte   `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishBlockRequest) Reset()         { *m = PublishBlockRequest{} }
func (m *PublishBlockRequest) String() string { return proto.CompactTextString(m) }
func (*PublishBlockRequest) ProtoMessage()    {}
func (*PublishBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{13}
}
func (m *PublishBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishBlockRequest.Unmarshal(m, b)
}
func (m *PublishBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishBlockRequest.Marshal(b, m, deterministic)
}
func (dst *PublishBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishBlockRequest.Merge(dst, src)
}
func (m *PublishBlockRequest) XXX_Size() int {
	return xxx_messageInfo_PublishBlockRequest.Size(m)
}
func (m *PublishBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishBlockRequest proto.InternalMessageInfo

func (m *PublishBlockRequest) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

type PublishBlockReply struct {
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishBlockReply) Reset()         { *m = PublishBlockReply{} }
func (m *PublishBlockReply) String() string { return proto.CompactTextString(m) }
func (*PublishBlockReply) ProtoMessage()    {}
func (*PublishBlockReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{14}
}
func (m *PublishBlockReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishBlockReply.Unmarshal(m, b)
}
func (m *PublishBlockReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishBlockReply.Marshal(b, m, deterministic)
}
func (dst *PublishBlockReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishBlockReply.Merge(dst, src)
}
func (m *PublishBlockReply) XXX_Size() int {
	return xxx_messageInfo_PublishBlockReply.Size(m)
}
func (m *PublishBlockReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishBlockReply.DiscardUnknown(m)
}

var xxx_messageInfo_PublishBlockReply proto.InternalMessageInfo

func (m *PublishBlockReply) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GetBlockTemplateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockTemplateRequest) Reset()         { *m = GetBlockTemplateRequest{} }
func (m *GetBlockTemplateRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockTemplateRequest) ProtoMessage()    {}
func (*GetBlockTemplateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{15}
}
func (m *GetBlockTemplateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockTemplateRequest.Unmarshal(m, b)
}
func (m *GetBlockTemplateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockTemplateRequest.Marshal(b, m, deterministic)
}
func (dst *GetBlockTemplateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockTemplateRequest.Merge(dst, src)
}
func (m *GetBlockTemplateRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockTemplateRequest.Size(m)
}
func (m *GetBlockTemplateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockTemplateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockTemplateRequest proto.InternalMessageInfo

type GetBlockTemplateReply struct {
	Template             *BlockTemplate `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetBlockTemplateReply) Reset()         { *m = GetBlockTemplateReply{} }
func (m *GetBlockTemplateReply) String() string { return proto.CompactTextString(m) }
func (*GetBlockTemplateReply) ProtoMessage()    {}
func (*GetBlockTemplateReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{16}
}
func (m *GetBlockTemplateReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockTemplateReply.Unmarshal(m, b)
}
func (m *GetBlockTemplateReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockTemplateReply.Marshal(b, m, deterministic)
}
func (dst *GetBlockTemplateReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockTemplateReply.Merge(dst, src)
}
func (m *GetBlockTemplateReply) XXX_Size() int {
	return xxx_messageInfo_GetBlockTemplateReply.Size(m)
}
func (m *GetBlockTemplateReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockTemplateReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockTemplateReply proto.InternalMessageInfo

func (m *GetBlockTemplateReply) GetTemplate() *BlockTemplate {
	if m != nil {
		return m.Template
	}
	return nil
}

type ListenIncomingTxsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenIncomingTxsRequest) Reset()         { *m = ListenIncomingTxsRequest{} }
func (m *ListenIncomingTxsRequest) String() string { return proto.CompactTextString(m) }
func (*ListenIncomingTxsRequest) ProtoMessage()    {}
func (*ListenIncomingTxsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{17}
}
func (m *ListenIncomingTxsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenIncomingTxsRequest.Unmarshal(m, b)
}
func (m *ListenIncomingTxsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenIncomingTxsRequest.Marshal(b, m, deterministic)
}
func (dst *ListenIncomingTxsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenIncomingTxsRequest.Merge(dst, src)
}
func (m *ListenIncomingTxsRequest) XXX_Size() int {
	return xxx_messageInfo_ListenIncomingTxsRequest.Size(m)
}
func (m *ListenIncomingTxsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenIncomingTxsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenIncomingTxsRequest proto.InternalMessageInfo

type TxWithBlock struct {
	Tx                   *Tx      `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	Block                *Block   `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxWithBlock) Reset()         { *m = TxWithBlock{} }
func (m *TxWithBlock) String() string { return proto.CompactTextString(m) }
func (*TxWithBlock) ProtoMessage()    {}
func (*TxWithBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpc_b849ccd7f7a615cd, []int{18}
}
func (m *TxWithBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxWithBlock.Unmarshal(m, b)
}
func (m *TxWithBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxWithBlock.Marshal(b, m, deterministic)
}
func (dst *TxWithBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxWithBlock.Merge(dst, src)
}
func (m *TxWithBlock) XXX_Size() int {
	return xxx_messageInfo_TxWithBlock.Size(m)
}
func (m *TxWithBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_TxWithBlock.DiscardUnknown(m)
}

var xxx_messageInfo_TxWithBlock proto.InternalMessageInfo

func (m *TxWithBlock) GetTx() *Tx {
	if m != nil {
		return m.Tx
	}
	return nil
}

func (m *TxWithBlock) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func init() {
	proto.RegisterType((*Error)(nil), "rpc.Error")
	proto.RegisterType((*Block)(nil), "rpc.Block")
	proto.RegisterType((*BlockTemplate)(nil), "rpc.BlockTemplate")
	proto.RegisterType((*Tx)(nil), "rpc.Tx")
	proto.RegisterType((*Input)(nil), "rpc.Input")
	proto.RegisterType((*Outpoint)(nil), "rpc.Outpoint")
	proto.RegisterType((*Output)(nil), "rpc.Output")
	proto.RegisterType((*GetBlockRequest)(nil), "rpc.GetBlockRequest")
	proto.RegisterType((*GetBlockReply)(nil), "rpc.GetBlockReply")
	proto.RegisterType((*GetBestBlockHashRequest)(nil), "rpc.GetBestBlockHashRequest")
	proto.RegisterType((*GetBestBlockHashReply)(nil), "rpc.GetBestBlockHashReply")
	proto.RegisterType((*PublishTxRequest)(nil), "rpc.PublishTxRequest")
	proto.RegisterType((*PublishTxReply)(nil), "rpc.PublishTxReply")
	proto.RegisterType((*PublishBlockRequest)(nil), "rpc.PublishBlockRequest")
	proto.RegisterType((*PublishBlockReply)(nil), "rpc.PublishBlockReply")
	proto.RegisterType((*GetBlockTemplateRequest)(nil), "rpc.GetBlockTemplateRequest")
	proto.RegisterType((*GetBlockTemplateReply)(nil), "rpc.GetBlockTemplateReply")
	proto.RegisterType((*ListenIncomingTxsRequest)(nil), "rpc.ListenIncomingTxsRequest")
	proto.RegisterType((*TxWithBlock)(nil), "rpc.TxWithBlock")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeClient is the client API for Node service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeClient interface {
	GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockReply, error)
	GetBestBlockHash(ctx context.Context, in *GetBestBlockHashRequest, opts ...grpc.CallOption) (*GetBestBlockHashReply, error)
	PublishTx(ctx context.Context, in *PublishTxRequest, opts ...grpc.CallOption) (*PublishTxReply, error)
	PublishBlock(ctx context.Context, in *PublishBlockRequest, opts ...grpc.CallOption) (*PublishBlockReply, error)
	ListenIncomingTxs(ctx context.Context, in *ListenIncomingTxsRequest, opts ...grpc.CallOption) (Node_ListenIncomingTxsClient, error)
	GetBlockTemplate(ctx context.Context, in *GetBlockTemplateRequest, opts ...grpc.CallOption) (Node_GetBlockTemplateClient, error)
}

type nodeClient struct {
	cc *grpc.ClientConn
}

func NewNodeClient(cc *grpc.ClientConn) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockReply, error) {
	out := new(GetBlockReply)
	err := c.cc.Invoke(ctx, "/rpc.Node/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) GetBestBlockHash(ctx context.Context, in *GetBestBlockHashRequest, opts ...grpc.CallOption) (*GetBestBlockHashReply, error) {
	out := new(GetBestBlockHashReply)
	err := c.cc.Invoke(ctx, "/rpc.Node/GetBestBlockHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) PublishTx(ctx context.Context, in *PublishTxRequest, opts ...grpc.CallOption) (*PublishTxReply, error) {
	out := new(PublishTxReply)
	err := c.cc.Invoke(ctx, "/rpc.Node/PublishTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) PublishBlock(ctx context.Context, in *PublishBlockRequest, opts ...grpc.CallOption) (*PublishBlockReply, error) {
	out := new(PublishBlockReply)
	err := c.cc.Invoke(ctx, "/rpc.Node/PublishBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) ListenIncomingTxs(ctx context.Context, in *ListenIncomingTxsRequest, opts ...grpc.CallOption) (Node_ListenIncomingTxsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Node_serviceDesc.Streams[0], "/rpc.Node/ListenIncomingTxs", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeListenIncomingTxsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Node_ListenIncomingTxsClient interface {
	Recv() (*TxWithBlock, error)
	grpc.ClientStream
}

type nodeListenIncomingTxsClient struct {
	grpc.ClientStream
}

func (x *nodeListenIncomingTxsClient) Recv() (*TxWithBlock, error) {
	m := new(TxWithBlock)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *nodeClient) GetBlockTemplate(ctx context.Context, in *GetBlockTemplateRequest, opts ...grpc.CallOption) (Node_GetBlockTemplateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Node_serviceDesc.Streams[1], "/rpc.Node/GetBlockTemplate", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeGetBlockTemplateClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Node_GetBlockTemplateClient interface {
	Recv() (*GetBlockTemplateReply, error)
	grpc.ClientStream
}

type nodeGetBlockTemplateClient struct {
	grpc.ClientStream
}

func (x *nodeGetBlockTemplateClient) Recv() (*GetBlockTemplateReply, error) {
	m := new(GetBlockTemplateReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NodeServer is the server API for Node service.
type NodeServer interface {
	GetBlock(context.Context, *GetBlockRequest) (*GetBlockReply, error)
	GetBestBlockHash(context.Context, *GetBestBlockHashRequest) (*GetBestBlockHashReply, error)
	PublishTx(context.Context, *PublishTxRequest) (*PublishTxReply, error)
	PublishBlock(context.Context, *PublishBlockRequest) (*PublishBlockReply, error)
	ListenIncomingTxs(*ListenIncomingTxsRequest, Node_ListenIncomingTxsServer) error
	GetBlockTemplate(*GetBlockTemplateRequest, Node_GetBlockTemplateServer) error
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Node/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetBlock(ctx, req.(*GetBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_GetBestBlockHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBestBlockHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetBestBlockHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Node/GetBestBlockHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetBestBlockHash(ctx, req.(*GetBestBlockHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_PublishTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishTxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).PublishTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Node/PublishTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).PublishTx(ctx, req.(*PublishTxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_PublishBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).PublishBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Node/PublishBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).PublishBlock(ctx, req.(*PublishBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_ListenIncomingTxs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenIncomingTxsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeServer).ListenIncomingTxs(m, &nodeListenIncomingTxsServer{stream})
}

type Node_ListenIncomingTxsServer interface {
	Send(*TxWithBlock) error
	grpc.ServerStream
}

type nodeListenIncomingTxsServer struct {
	grpc.ServerStream
}

func (x *nodeListenIncomingTxsServer) Send(m *TxWithBlock) error {
	return x.ServerStream.SendMsg(m)
}

func _Node_GetBlockTemplate_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetBlockTemplateRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeServer).GetBlockTemplate(m, &nodeGetBlockTemplateServer{stream})
}

type Node_GetBlockTemplateServer interface {
	Send(*GetBlockTemplateReply) error
	grpc.ServerStream
}

type nodeGetBlockTemplateServer struct {
	grpc.ServerStream
}

func (x *nodeGetBlockTemplateServer) Send(m *GetBlockTemplateReply) error {
	return x.ServerStream.SendMsg(m)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBlock",
			Handler:    _Node_GetBlock_Handler,
		},
		{
			MethodName: "GetBestBlockHash",
			Handler:    _Node_GetBestBlockHash_Handler,
		},
		{
			MethodName: "PublishTx",
			Handler:    _Node_PublishTx_Handler,
		},
		{
			MethodName: "PublishBlock",
			Handler:    _Node_PublishBlock_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListenIncomingTxs",
			Handler:       _Node_ListenIncomingTxs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetBlockTemplate",
			Handler:       _Node_GetBlockTemplate_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rpc.proto",
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_rpc_b849ccd7f7a615cd) }

var fileDescriptor_rpc_b849ccd7f7a615cd = []byte{
	// 736 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xdb, 0x6e, 0xd3, 0x4c,
	0x10, 0xae, 0xed, 0x38, 0x87, 0xc9, 0xe1, 0x6f, 0xb7, 0x69, 0xeb, 0xe6, 0x6f, 0xa5, 0x68, 0x45,
	0x21, 0x52, 0xa5, 0x0a, 0x0a, 0x54, 0xe2, 0xb6, 0x12, 0xb4, 0x95, 0xa0, 0x54, 0xab, 0x08, 0x2e,
	0x51, 0x92, 0x2e, 0x89, 0x55, 0xc7, 0x36, 0xde, 0x4d, 0xe4, 0x3e, 0x07, 0xbc, 0x04, 0x12, 0x0f,
	0x89, 0x76, 0xd6, 0x76, 0x6c, 0x37, 0xb9, 0xe3, 0x6e, 0x67, 0xe6, 0x9b, 0xc3, 0xf7, 0xcd, 0x7a,
	0x0d, 0x8d, 0x28, 0x9c, 0x9c, 0x85, 0x51, 0x20, 0x03, 0x62, 0x45, 0xe1, 0x84, 0xfe, 0x0f, 0xf6,
	0xfb, 0x28, 0x0a, 0x22, 0x42, 0xa0, 0x32, 0x09, 0xee, 0xb9, 0x63, 0xf4, 0x8d, 0x41, 0x9b, 0xe1,
	0x99, 0xfe, 0x32, 0xc1, 0xbe, 0xf4, 0x82, 0xc9, 0x83, 0x8a, 0xce, 0x46, 0x62, 0x86, 0xd1, 0x06,
	0xc3, 0x33, 0x71, 0xa0, 0xb6, 0xe4, 0x91, 0x70, 0x03, 0xdf, 0x31, 0x31, 0x29, 0x35, 0x49, 0x17,
	0xec, 0xef, 0xde, 0x68, 0x2a, 0x1c, 0xab, 0x6f, 0x0d, 0x1a, 0x4c, 0x1b, 0xe4, 0x19, 0xb4, 0x55,
	0xde, 0x5d, 0xc4, 0x97, 0x58, 0xd4, 0xa9, 0x60, 0xb1, 0xa2, 0x93, 0x3c, 0x87, 0x8e, 0x72, 0x7c,
	0xe2, 0xd1, 0x83, 0xc7, 0x59, 0x10, 0x48, 0xc7, 0x46, 0x58, 0xc9, 0x4b, 0x8e, 0xa0, 0x21, 0xdd,
	0x39, 0x17, 0x72, 0x34, 0x0f, 0x9d, 0x6a, 0xdf, 0x18, 0x58, 0x6c, 0xe5, 0x20, 0xfb, 0x50, 0x9d,
	0x71, 0x77, 0x3a, 0x93, 0x4e, 0x0d, 0x47, 0x4b, 0x2c, 0xc5, 0x63, 0xec, 0x4a, 0xe1, 0xd4, 0x35,
	0x4b, 0x75, 0x56, 0xd3, 0xfa, 0x81, 0x3f, 0xe1, 0x4e, 0xa3, 0x6f, 0x0c, 0x2a, 0x4c, 0x1b, 0xe4,
	0x10, 0x2c, 0x19, 0x0b, 0x07, 0xfa, 0xd6, 0xa0, 0x79, 0x5e, 0x3b, 0x53, 0xb2, 0x0d, 0x63, 0xa6,
	0x7c, 0xf4, 0x8f, 0x01, 0x6d, 0x1c, 0x76, 0xc8, 0xe7, 0xa1, 0x37, 0x92, 0x3c, 0x2f, 0x85, 0xb1,
	0x41, 0x0a, 0x33, 0x2f, 0xc5, 0x31, 0x40, 0x18, 0xf1, 0xe5, 0xb7, 0x31, 0xea, 0x60, 0xf5, 0x8d,
	0x41, 0x8b, 0x35, 0xc2, 0x4c, 0x83, 0x02, 0xb7, 0x0a, 0x4e, 0xb5, 0x96, 0x9b, 0x5d, 0xe0, 0xb6,
	0x0f, 0x55, 0x39, 0x8a, 0xa6, 0x5c, 0xa2, 0x1c, 0x6d, 0x96, 0x58, 0xf4, 0xa7, 0x01, 0xe6, 0x30,
	0xfe, 0x27, 0x2b, 0xa4, 0x50, 0x75, 0xfd, 0x70, 0x21, 0x85, 0x53, 0x41, 0x5d, 0x00, 0x75, 0xb9,
	0x51, 0x2e, 0x96, 0x44, 0xc8, 0x09, 0xd4, 0x82, 0x85, 0x44, 0x90, 0x8d, 0xa0, 0x26, 0x82, 0x3e,
	0xa3, 0x8f, 0xa5, 0x31, 0xfa, 0x05, 0x6c, 0xcc, 0x23, 0x6f, 0xa1, 0xa3, 0x98, 0xbb, 0xc1, 0x42,
	0x68, 0x0c, 0x4e, 0xd8, 0x3c, 0x6f, 0x67, 0x69, 0x81, 0xeb, 0x4b, 0x56, 0x02, 0x29, 0xb6, 0x62,
	0x12, 0xb9, 0xa1, 0xc4, 0xc9, 0x5b, 0x2c, 0xb1, 0xe8, 0x1b, 0xa8, 0xa7, 0x39, 0x6b, 0x29, 0x77,
	0xc1, 0x76, 0xfd, 0x7b, 0x1e, 0x27, 0x84, 0xb5, 0x41, 0x2f, 0xa0, 0x9a, 0xd4, 0xed, 0x82, 0xbd,
	0x1c, 0x79, 0x0b, 0xfd, 0x21, 0x54, 0x98, 0x36, 0x36, 0x76, 0x3b, 0x81, 0xff, 0xae, 0xb8, 0xc4,
	0xad, 0x31, 0xfe, 0x63, 0xc1, 0xc5, 0xda, 0xa6, 0xf4, 0x15, 0xb4, 0x57, 0xb0, 0xd0, 0x7b, 0x24,
	0x7d, 0xb0, 0xf5, 0xee, 0x35, 0x57, 0xad, 0xa3, 0x8e, 0xeb, 0x00, 0x3d, 0x84, 0x03, 0x95, 0xc2,
	0x85, 0x4e, 0xbb, 0x1e, 0x89, 0x59, 0xd2, 0x81, 0x9e, 0xc2, 0xde, 0xd3, 0x90, 0xaa, 0xba, 0xae,
	0x35, 0x85, 0xed, 0xbb, 0xc5, 0xd8, 0x73, 0xc5, 0x6c, 0x18, 0xa7, 0x23, 0x76, 0xc0, 0x94, 0x31,
	0xa2, 0x5a, 0xcc, 0x94, 0x31, 0xfd, 0x00, 0x9d, 0x1c, 0x26, 0x99, 0x8f, 0xab, 0x67, 0xa1, 0x30,
	0x1f, 0x3e, 0x14, 0x4c, 0x07, 0xb2, 0x5e, 0x66, 0xae, 0xd7, 0x29, 0xec, 0x26, 0x75, 0x0a, 0x8a,
	0x74, 0xf3, 0x64, 0x5b, 0x29, 0xc1, 0x17, 0xb0, 0x53, 0x04, 0x6f, 0x62, 0x90, 0x28, 0x91, 0xff,
	0xe0, 0x52, 0x25, 0xae, 0xb4, 0x12, 0xc5, 0x90, 0xaa, 0x73, 0x06, 0x75, 0x99, 0x38, 0x12, 0x0a,
	0x64, 0x25, 0x71, 0x06, 0xcd, 0x30, 0xb4, 0x07, 0xce, 0x47, 0x57, 0x48, 0xee, 0xdf, 0xf8, 0x93,
	0x60, 0xee, 0xfa, 0xd3, 0x61, 0x2c, 0xd2, 0x26, 0xd7, 0xd0, 0x1c, 0xc6, 0x5f, 0x5d, 0xa9, 0xe7,
	0x24, 0x07, 0x99, 0x78, 0xb9, 0x77, 0xc1, 0x94, 0xf1, 0x6a, 0xa7, 0xe6, 0x86, 0x9d, 0x9e, 0xff,
	0xb6, 0xa0, 0x72, 0x1b, 0xdc, 0x73, 0x72, 0x01, 0xf5, 0x74, 0x6e, 0xd2, 0x45, 0x5c, 0xe9, 0x16,
	0xf5, 0x48, 0xc9, 0x1b, 0x7a, 0x8f, 0x74, 0x8b, 0xdc, 0xc2, 0x76, 0x79, 0xf3, 0xe4, 0x28, 0x43,
	0xae, 0xb9, 0x2b, 0xbd, 0xde, 0x86, 0xa8, 0xae, 0xf7, 0x0e, 0x1a, 0xd9, 0xe2, 0xc9, 0x1e, 0x42,
	0xcb, 0x97, 0xa5, 0xb7, 0x5b, 0x76, 0xeb, 0xd4, 0x4b, 0x68, 0xe5, 0xd7, 0x47, 0x9c, 0x3c, 0xac,
	0x40, 0x65, 0x7f, 0x4d, 0x44, 0xd7, 0xb8, 0x86, 0x9d, 0x27, 0xaa, 0x93, 0x63, 0x84, 0x6f, 0xda,
	0x46, 0x6f, 0x3b, 0x91, 0x3c, 0x5b, 0x08, 0xdd, 0x7a, 0x69, 0x90, 0x3b, 0x2d, 0x4c, 0xe1, 0x51,
	0x3e, 0x2a, 0x48, 0x58, 0xba, 0x3a, 0x39, 0x61, 0x9e, 0xdc, 0x1e, 0x55, 0x71, 0x5c, 0xc5, 0x9f,
	0xe4, 0xeb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x02, 0xa7, 0xd3, 0x81, 0x31, 0x07, 0x00, 0x00,
}
